# Generated by Django 2.0.5 on 2019-06-27 00:44

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import markdownx.models
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='_ID')),
                ('id', models.CharField(editable=False, max_length=256, verbose_name='ID')),
                ('edition_id', models.CharField(editable=False, max_length=256, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('short_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Short Name')),
                ('abbreviation', models.CharField(blank=True, max_length=8, null=True, verbose_name='Abbreviation')),
                ('edition', models.CharField(max_length=256, verbose_name='Edition')),
                ('created', models.DateTimeField(editable=False, verbose_name='Created')),
                ('modified', models.DateTimeField(editable=False, verbose_name='Modified')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Books',
                'db_table': 'book',
                'ordering': ['id', 'edition_id'],
                'get_latest_by': 'modified',
            },
            managers=[
                ('books', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='BookFormat',
            fields=[
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='_ID')),
                ('id', models.CharField(editable=False, max_length=256, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('created', models.DateTimeField(editable=False, verbose_name='Created')),
                ('modified', models.DateTimeField(editable=False, verbose_name='Modified')),
                ('format_type', models.CharField(choices=[('Physical', 'Physical'), ('Digital', 'Digital')], default='Physical', max_length=64, verbose_name='Type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Book Format',
                'verbose_name_plural': 'Book Formats',
                'db_table': 'book_format',
                'ordering': ['id'],
                'get_latest_by': 'modified',
            },
            managers=[
                ('book_formats', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='_ID')),
                ('id', models.CharField(editable=False, max_length=256, verbose_name='ID')),
                ('version_id', models.CharField(editable=False, max_length=16, verbose_name='Version ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('short_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Short Name')),
                ('abbreviation', models.CharField(blank=True, max_length=8, null=True, verbose_name='Abbreviation')),
                ('version', models.CharField(max_length=16, verbose_name='Version')),
                ('created', models.DateTimeField(editable=False, verbose_name='Created')),
                ('modified', models.DateTimeField(editable=False, verbose_name='Modified')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Game',
                'verbose_name_plural': 'Games',
                'db_table': 'game',
                'ordering': ['id', 'version_id'],
                'get_latest_by': 'modified',
            },
            managers=[
                ('games', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalBook',
            fields=[
                ('_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='_ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('short_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Short Name')),
                ('abbreviation', models.CharField(blank=True, max_length=8, null=True, verbose_name='Abbreviation')),
                ('edition', models.CharField(max_length=256, verbose_name='Edition')),
                ('created', models.DateTimeField(editable=False, verbose_name='Created')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Book',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBookFormat',
            fields=[
                ('_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='_ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('created', models.DateTimeField(editable=False, verbose_name='Created')),
                ('format_type', models.CharField(choices=[('Physical', 'Physical'), ('Digital', 'Digital')], default='Physical', max_length=64, verbose_name='Type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Book Format',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGame',
            fields=[
                ('_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='_ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('short_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Short Name')),
                ('abbreviation', models.CharField(blank=True, max_length=8, null=True, verbose_name='Abbreviation')),
                ('version', models.CharField(max_length=16, verbose_name='Version')),
                ('created', models.DateTimeField(editable=False, verbose_name='Created')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Game',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPublisher',
            fields=[
                ('_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='_ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('created', models.DateTimeField(editable=False, verbose_name='Created')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Publisher',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSchema',
            fields=[
                ('_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='_ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('created', models.DateTimeField(editable=False, verbose_name='Created')),
                ('document', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Data')),
                ('schema_type', models.CharField(choices=[('Form', 'Form'), ('Object', 'Object')], default='Object', max_length=64, verbose_name='Type')),
                ('specification', models.CharField(choices=[('Draft-07', 'Draft-07')], default='Draft-07', max_length=64, verbose_name='Specification')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('read_me', markdownx.models.MarkdownxField(verbose_name='Read Me')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Schema',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='_ID')),
                ('id', models.CharField(editable=False, max_length=256, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('created', models.DateTimeField(editable=False, verbose_name='Created')),
                ('modified', models.DateTimeField(editable=False, verbose_name='Modified')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Publisher',
                'verbose_name_plural': 'Publishers',
                'db_table': 'publisher',
                'ordering': ['id'],
                'get_latest_by': 'modified',
            },
            managers=[
                ('publishers', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Schema',
            fields=[
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='_ID')),
                ('id', models.CharField(editable=False, max_length=256, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('version', models.IntegerField(default=1, editable=False, verbose_name='Version')),
                ('created', models.DateTimeField(editable=False, verbose_name='Created')),
                ('modified', models.DateTimeField(editable=False, verbose_name='Modified')),
                ('document', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Data')),
                ('schema_type', models.CharField(choices=[('Form', 'Form'), ('Object', 'Object')], default='Object', max_length=64, verbose_name='Type')),
                ('specification', models.CharField(choices=[('Draft-07', 'Draft-07')], default='Draft-07', max_length=64, verbose_name='Specification')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('read_me', markdownx.models.MarkdownxField(verbose_name='Read Me')),
            ],
            options={
                'verbose_name': 'Schema',
                'verbose_name_plural': 'Schemas',
                'db_table': 'schema',
                'ordering': ['id'],
                'get_latest_by': 'modified',
            },
            managers=[
                ('schemas', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddIndex(
            model_name='schema',
            index=models.Index(fields=['id', 'version'], name='schema_id_d79ccd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='schema',
            unique_together={('id', 'version')},
        ),
        migrations.AddIndex(
            model_name='publisher',
            index=models.Index(fields=['id'], name='publisher_id_eb4627_idx'),
        ),
        migrations.AddField(
            model_name='historicalschema',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalpublisher',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalgame',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalgame',
            name='publisher',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Publisher'),
        ),
        migrations.AddField(
            model_name='historicalbookformat',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalbook',
            name='book_format',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.BookFormat'),
        ),
        migrations.AddField(
            model_name='historicalbook',
            name='game',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Game'),
        ),
        migrations.AddField(
            model_name='historicalbook',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalbook',
            name='publisher',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Publisher'),
        ),
        migrations.AddField(
            model_name='game',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.Publisher'),
        ),
        migrations.AddIndex(
            model_name='bookformat',
            index=models.Index(fields=['id'], name='book_format_id_4322f2_idx'),
        ),
        migrations.AddField(
            model_name='book',
            name='book_format',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.BookFormat'),
        ),
        migrations.AddField(
            model_name='book',
            name='game',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.Game'),
        ),
        migrations.AddField(
            model_name='book',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.Publisher'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['id', 'version_id'], name='game_id_4f6514_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='game',
            unique_together={('id', 'version_id')},
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['id', 'edition_id'], name='book_id_a9ce99_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='book',
            unique_together={('id', 'edition_id')},
        ),
    ]
